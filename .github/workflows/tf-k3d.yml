name: 'tf-k3d'

on:
  pull_request:
  push:

jobs:
  terraform:
    name: 'Terraform with k3d'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: AbsaOSS/k3d-action@v1.3.1
        name: "Create 1st k3d Cluster"
        id: test-cluster-1
        with:
          cluster-name: "test-cluster-1"
          args: >-
            --agents 1
            --config=k3d.yaml

      - name: Cluster info
        run: |
          echo test-cluster-1: ${{ steps.test-cluster-1.outputs.network }} ${{ steps.test-cluster-1.outputs.subnet-CIDR }}
          echo
          kubectl cluster-info --context k3d-test-cluster-1

      - name: Get nodes
        run: |
          kubectl get nodes -o wide
          
## Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Verify Terraform version
        run: terraform --version

      - name: Terraform Init
        run: terraform init -no-color -input=false

      - name: Terraform validation
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false

      - name: Post GH comment
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌 \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            ##### Terraform Validation 🤖${{ steps.validate.outputs.stdout }}
            ##### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
